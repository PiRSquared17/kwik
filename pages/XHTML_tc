Es una extensión, más formal, que HTML, presentándose como un subconjunto de XML.
XML es un metalenguaje que sirve para describir cualquier cosa, siguiendo unas estrictas reglas de sintaxis, que luego es parseado en el espacio de nombres que lo reconozca. La sintaxis es más estricta que en HTML, y suele usarse de modo completamente semántico, es decir, sólo describe la página web, no su aspecto. Para el aspecto se usa una hoja de estilo aparte. Resumiendo:
* un formato simple, basado en texto, y estándar para almacenar estructuras complejas de datos
* si se puede representar jerárquicamente, se puede hacer con XML
* separa semántica (DTD), estructura (DOM) y presentación (CSS).

Particularidades a la hora de redactar código:
* Cierre de etiquetas simples con />.
* img siempre con alt.
* script con type.
* form con action.
* forms no llevan name, sino id.
* inputs pueden llevar id o name. name se propaga al hacer submit pero id no. Sin embargo id se puede conocerse en todo el documento con getElementById. Para variar, IE confunde name e id.
* No podemos tener un form que engloba varios td (un tr), por el problema del anidamiento. Sí podemos tener un form que englobe toda una table o dentro de un td.
* La etiqueta b desaparece. Usar strong.
* No usar center.
* Recuerdo etiquetas poco usadas: label, fieldset, legend.
* div o table dentro de los forms para englobar su contenido, ya que...
* No puede haber texto ni inputs huérfanos, fuera de un contenedor de texto como p, div, span o td.
* En CSS, usar # para definir propiedades a un elemento (id), usar . para las propiedades de varios elementos (class), o bien definir las propiedades de todas las apariciones de una etiqueta.