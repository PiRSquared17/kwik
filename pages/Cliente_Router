Vamos a configurar un PC de pobres recursos como router. Este router tiene la particularidad de ofrecer conectividad a Internet a una red, formando él mismo parte (cliente) de una red inalámbrica. Esta configuración puede sustituir al WRT54G en modo sta, a mucho menor coste, ya que emplea hardware reciclado. Es similar a la creación de un proxy, pero sin squid y con un kernel a medida.

Para ello emplearé:
* PC con procesador Pentium 200 MMX (podría funcionar alguno inferior, sólo consume)
* 32 MB de RAM (mínimo aconsejado para no usar swap)
* tarjeta PCI WiFi Edimax EW-7128g. Cualquiera que esté soportada por ndiswrapper. (link)
* tarjeta PCI Ethernet con chip RTL8139. Es la más típica.
* 4 GB de disco duro

Instalo FreeBSD 6.1. Compilo un nuevo núcleo en otro equipo más veloz. A este núcleo (descargar) le añado soporte para firewall y NAT.
Lo paso por ftp y descomprimo.
Modifico motd y lo sustituyo por un vistoso ASCII art link!!
quitar ttys, no necesito la consola, y me consume memoria.

quitar de fstab la linea de swap. con 32mb no necesito.

El contenido de /etc/rc.conf :
 keymap="spanish.iso.acc"
 
 hostname="shura"
 ifconfig_rl0="inet 10.0.0.1 netmask 255.255.255.0"
 ifconfig_ndis0="inet 192.168.1.172 ssid default channel 1"
 defaultrouter="192.168.1.1"
 
 sshd_enable="YES"
 sendmail_enable="NONE"
 syslogd_enable="NO"
 cron_enable="NO"
 devd_enable="NO"
 
 gateway_enable="YES"
 
 dhcpd_enable="YES"
 
 natd_enable="YES"
 natd_interface="ndis0"
 natd_flags="-redirect_port tcp 10.0.0.253:80 80"
 
 firewall_enable="YES"
 firewall_type="/etc/firewall.reglas"
 firewall_logging="NO"
 firewall_script="/etc/rc.firewall"

El contenido de /etc/firewall.reglas :
 add 101 allow ip from any to any via lo0
 add 102 allow ip from any to any via rl0
 
 add 300 deny all from 192.168.0.0/16 to any in via ndis0
 
 add 400 allow tcp from any to me 4662 in via ndis0
 
 add 500 divert natd ip from any to any via ndis0
 add 600 allow all from any to any

Y /etc/resolv.conf como siempre:
 nameserver 80.58.61.250
 nameserver 80.58.61.254

Comprobar las siguientes líneas de /etc/ssh/sshd_config :
 Port 22
 Protocol 2
 PermitRootLogin yes

Ahora preparamos el DHCP.
 # pkg_add -r isc-dhcp
Editar /usr/local/etc/dhcpd.conf :
 option domain-name-servers 80.58.61.250, 80.58.61.254;
 
 default-lease-time 18600;
 max-lease-time 27200;
 
 authoritative;
 
 ddns-update-style none;
 
 subnet 10.0.0.0 netmask 255.255.255.0 {
   range 10.0.0.10 10.0.0.254;
   option routers 10.0.0.1;
 }


Si el equipo es superior a 350 MHz y tiene 64 de RAM (o superior), podemos usarle como centro de descargas del emule. Nos conectamos a él por VNC y cogemos los archivos por FTP.
pkg_add -r
tightvnc
lwm
xmule
xorg-clients