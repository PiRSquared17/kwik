Python para [http://opensource.nokia.com/projects/pythonfors60/ teléfonos Symbian] serie 60.

Requiere [http://wiki.opensource.nokia.com/projects/Installing_PyS60 instalar] en el teléfono (en terminales con el sistema 3rd edition) los siguientes [https://sourceforge.net/project/showfiles.php?group_id=154155 ficheros]:
*PythonForS60_1_4_4_3rdEd.sis , el intérprete
*PythonScriptShell_1_4_4_3rdEd.sis , frontend shell interactiva que aparece bajo el menú aplicaciones del terminal

El uso de ciertas características (como el módulo location) requiere en los dispositivos 3rd firmar el PythonScriptShell.
*http://discussion.forum.nokia.com/forum/showthread.php?t=131910
*https://www.symbiansigned.com/app/page/public/openSignedOnline.do
Este es el listado de ''capabilities'':
*http://www.forum.nokia.com/Resources_and_Information/Explore/Software_Platforms/S60/Platform_Security/Capability_Descriptions.xhtml

== API ==
*e32: no relacionado con el UI y no provisto por la biblioteca estándar de python
*appuifw: User Interface API

== BT shell ==
Es posible teclear python en el teléfono, pero es mucho más atractivo hacerlo en el PC y que mediante un [http://wiki.opensource.nokia.com/projects/PyS60_Bluetooth_console puerto serie bluetooth] se ejecute en el teléfono:
Pasos previos Hardy 8.04
 wget http://ftp.uk.debian.org/debian/pool/main/b/bluez-utils/bluez-utils_3.30-3_i386.deb
 sudo dpkg -i bluez-utils_3.30-3_i386.deb
...hasta aqui
 $ hciconfig reset
 $ sdptool add --channel=2 SP
...ahora abrir la consola python BT en el teléfono:
 $ rfcomm listen rfcomm2 2
 $ cu -l /dev/rfcomm2

Para subir scripts al teléfono lo mejor es usar ''obexftp'' desde un terminal:
 obexftp -b 00:17:E5:C5:58:0C -B 11 -c E:/Python -p Desktop/cell.py

Otro método podría ser usar ''putools''. Requiere instalar pyserial.
 sudo easy_install pyserial
Me permite sincronizar y subir scripts vía bluetooth. Pero parece que sólo funciona en Windows...
*http://people.csail.mit.edu/kapu/symbian/python.html

== Snippets ==
*http://snippets.dzone.com/tags/series60
*http://wiki.opensource.nokia.com/projects/PyS60_applications
*http://wiki.forum.nokia.com/index.php/Category:Python#Code_Examples_for_Python
*[http://wiki.forum.nokia.com/index.php/How_to_lock_and_unlock_keypad Bloquear teclado]

Más:
*http://discussion.forum.nokia.com/forum/forumdisplay.php?f=102
*http://cyke64.googlepages.com/
*http://www.croozeus.com/tutorial1.htm

Lista de keycodes:
*http://pys60dev.blogspot.com/2007/05/s60-keycode-dictionary.html

== Instalar scripts ==
Crear una carpeta en E: (memoria extra del teléfono) llamada Python. Copiar ahi los scripts. Ahora con el ''Run script'' del teléfono ya se pueden utilizar.

Cuando ya funcionen crear un paquete mediante ensymble:
 $ python ensymble_python2.5-0.27.py py2sis mis\ py/wc.py -n NoLlames -l EN -i nollames.svg
El icono debe estar en formato SVG-Tiny. Un conversor de este formato lo encontramos en el SDK para C++ de Symbian, svg2svgt.exe

Como podemos ver, el contenido del paquete no tiene asignadas ''capabilities''.
 $ python sisinfo/sisinfo.py -i -f nollames_v1_0_0.sis
   !:\resource\apps\NoLlames_0xec5a73f0.rsc
   !:\private\10003a3f\import\apps\NoLlames_0xec5a73f0_reg.rsc
   !:\resource\apps\NoLlames_0xec5a73f0_loc.r01
   !:\resource\apps\NoLlames_0xec5a73f0_aif.mif
   !:\private\ec5a73f0\default.py
   !:\sys\bin\NoLlames_0xec5a73f0.exe

Se lo asignamos:
 $ python ensymble_python2.5-0.27.py signsis --execaps SWEvent+ReadUserData nollames_v1_0_0.sis
Y lo pasamos por SymbianSigned para poder instalarlo. Si la aplicación se cierra nada más abrir, es porque ha de estar instalada en la misma memoria que python, y ha de tener las capacidades adecuadas.

El UID (código de aplicación) está en el testrange. Si reinstalamos la aplicación, al tener el mismo UID, el teléfono sobreentiende que queremos actualizarla.
*http://esl.fim.uni-passau.de/wiki/index.php/Python_on_S60

== Autolock ==
*http://s60addons.com/autolock/