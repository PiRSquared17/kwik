El NSLU2 es un dispositivo ''system on chip'', con un Intel XScale IXP420, basado en arquitectura ARM5 big endian. Dispone de 8 MB Flash, 32 MB RAM, un puerto Ethernet y dos USB 2.0 .

== Instalando OpenWRT ==
Aunque el slug inicialmente tenga IP fija 192.168.1.77, activar el servidor DHCP en el PC ya que el OpenWrt 7.09 que instalaremos utiliza DHCP (ver readme).

Abrir la página de administración del slug, directamente ésta: [http://10.0.0.100/Management/disk_fs.htm Administration-Advanced-Disk].
Esto evitará sobrecargar el aparato y que al upgradear se pare indicando que no queda suficiente memoria. Pulsar sobre Upgrade. Cargar el fichero ''NSLU2_V23R63.bin'' que actualiza a V2.3R63 si no lo tuviera ya (yo tenía V2.3R24).

Una vez finalizado, repetir el proceso con ''openwrt-kamikaze-7.09-nslu2.bin''.

Se reinicia. Escanear la red para saber qué dirección IP ha cogido. Inicialmente los servicios activos son:
 PORT   STATE SERVICE
 22/tcp open  ssh
 23/tcp open  telnet
 53/tcp open  domain
 80/tcp open  http

Entrar por telnet y fijar una clave de root. Entrar ahora por ssh.
 # ipkg list_installed
Borrar symlinks de scripts de inicio de ''/etc/rc.d'' o ''chmod -x de /etc/init.d'' .

Al igual que en el WRT54GL con el comnado ''nvram'', ciertos parámetros se almacenan en Flash.
 # uci show
 # uci set system.cfg1.hostname=ikki
 # uci commit

No es posible eliminar los paquetes que ya vienen preinstalados. [http://forum.openwrt.org/viewtopic.php?id=3474 No libera espacio] de Flash.

== Actualizando el firmware ==
El firmware a usar es openwrt-nslu2-squashfs.bin . Descargar de http://downloads.openwrt.org/kamikaze/8.09/ixp4xx/ .
Pulsar el boton de reset. Encender el NSLU2, manteniendo reset bien apretado. En el preciso momento que la luz naranja sea naranja oscuro (hay que ser muy exactos), soltar el reset.

Ahora el parpadeo es naranja/verde.

 # apt-get install upslug2
 # upslug
 NSLU2     00:18:39:3a:0e:57 Product ID: 1 Protocol ID: 0 Firmware Version: R23V63 [0x2363]
 # upslug -i openwrt.bin
 NSLU2     00:18:39:3a:0e:57 Product ID: 1 Protocol ID: 0 Firmware Version: R23V63 [0x2363]
 Upgrading LKG3A0E57 00:18:39:3a:0e:57
    . original flash contents  * packet timed out
    ! being erased             - erased
    u being upgraded           U upgraded
    v being verified           V verified 
 
  Display:
    <status> <address completed>+<bytes transmitted but not completed>
  Status:
    * timeout occured          + sequence error detected
 
  7fffff+000000 ...VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
 Rebooting... done

Ojo, ya que la IP del nuevo firmware es 192.168.1.1 !!

Desactivamos los servicios innecesarios.

== Paquetes y dispositivos==
Instalamos unos paquetes y sus dependencias. Por alguna razón, no es capaz de descargar los paquetes mediante ''opkg update''.
Modifico /etc/opkg.conf y comento el repositorio de downloads.openwrt.com y le creo en mi PC. Descargo los paquetes en el PC para luego instalarlos desde el nslu2.

Activa el USB. El nslu2 emplea EHCI (USB 2.0):
 kmod-usb2 kmod-usb-core
Estos módulos permiten usar dispositivos de almacenamiento extraible:
 kmod-usb-storage kmod-scsi-core

Si queremos disponer de la utilidad ''lsusb'' necesitamos:
 usbutils libusb zlib
...y el fichero http://www.linux-usb.org/usb.ids . Esto es la base de datos de identificadores de dispositivo. Se descarga en un script de post-instalación por /usr/sbin/update-usbids.sh

Salida de ejemplo:
 root@ikki:~# lsusb
 Bus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
 Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
 Bus 001 Device 004: ID 04fc:0561 Sunplus Technology Co., Ltd Flexcam 100
 Bus 001 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub

=== Montemos un pendrive ===
 kmod-fs-vfat kmod-nls-base kmod-nls-cp437 kmod-nls-iso8859-1
Cuando montamos un USB sin opciones se utiliza la codepage 437 y el charset ISO Latin 1
 # mount -t vfat /dev/sda1 /mnt
Alternativamente podemos usar UTF8 para preservar acentos y "case sensitiveness". Necesita el módulo kmod-nls-utf8 :
 # mount -t vfat -o iocharset=utf8 /dev/sda1 /mnt
Se recomienda usar codepage=850 (desconozco el motivo).

=== La webcam ===
 kmod-video-gspca kmod-video-core
 spcacat libpthread
Es muy importante instalar además ''kmod-usb-ohci'' . No lo pide como dependencia. Sim embargo, la cámara es USB 1.1 y no funciona con kmod-usb2 (que provee soporte para USB 2.0). Una vez solventado esto, al conectar la webcam ya es reconocida en dmesg, en logread, y aparece el nodo en /dev/video0 (mknod dev/video0 c 81 0). Ejemplos:
 spcacat -d /dev/video0 -f jpg -s 352x288 -N 1 -o #captura una imagen y la guarda en SpcaPict.jpg
 ffserver ffmpeg -vd /dev/video0 http://localhost:8090/feed.ffm #para hacer streaming
 vidcat -d /dev/video0 -s 352x288 -o test.jpg #programa de captura simple, pero que no está en los repositorios
Existe también motion, como programa de captura. Requiere libjpeg y libpthread.
*He indicado los pasos en el foro http://forum.openwrt.org/viewtopic.php?id=19060

=== Ralink RT73 ===
 kmod-rt73-usb kmod-rt2x00-usb
 kmod-rt2x00-lib kmod-mac80211 kmod-crypto-arc4 kmod-crc-itu kmod-crypto-core
Los dos últimos son para el WEP. Ahora airodump y aireplay:
 aircrack-ng libpcap libopenssl