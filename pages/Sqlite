Se trata de un potente motor de bases de datos SQL, muy ligero en cuanto a consumo de CPU y memoria.

No emplea un servidor central, sino que funciona con un archivo por cada BBDD. Las funciones de acceso a este archivo, muy similares a MySQL, incorporan toda la lógica de trabajo. El bloqueo en las operaciones de escritura es ''por archivo'': se bloquea el archivo y consecuentemente, todas sus tablas, mientras dure la operación.

Es por tanto, adecuado para aplicaciones que necesiten una base de datos SQL sin el consumo de recursos de albergar, a su vez, un servidor PostgreSQL o MySQL.

Su lenguaje es muy compatible con MySQL, de tal modo que podemos emplear los mismos volcados.
 mysqldump c-control -uroot --skip-opt -d > csq
Deben comprobarse las sentencias CREATE TABLE.
 mysqldump c-control -uroot --skip-opt -t | sqlite3 CC


Al estilo ''mysql client'' podemos contactar con la base de datos mediante línea de comandos, con sqlite3.
 .dump
 .quit
 $ sqlite3 CC '.dump'
 $ sqlite3 CC 'SELECT * FROM clases'

Las fechas.... strftime date etc...

Sqlite se comporta como InnoDB en el sentido de que es un archivo único, en este caso, por BBDD. Evita el problema del [[Ubuntu#DB_Engine|fichero que no decrece]] con la orden VACUUM.

Sqlite funciona perfectamente en UTF-8.

Con PHP el soporte no es muy bueno: php5-sqlite3 da problemas. php5-sqlite es SQLite 2.x y no accede a BBDD 3.x . Tenemos la abstracción PDO (estilo PEAR) pero es complicada de instalar.