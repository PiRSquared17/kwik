Vamos a ejecutar otro sistema operativo entero (Guest), desde un emulador o virtualizador en nuestro equipo (Host). Los más conocidos son:
*Xen: aunque el más rápido, sólo apto para SO libres, ya que requiere modificar código de tal modo que se adapte a la VM. Se dice que con unas nuevas extensiones de Intel ha sido posible ejecutar Windows sin modificaciones.
*VMWare: solución comercial, aunque las versiones libres (vmplayer, vmserver) no tienen tantas opciones como las cerradas como VMWorkstation
*Qemu: libre, aunque no muy rápida, pero preferida
*KVM: completamente libre e integrada en Linux, pero necesita de procesadores modernos con VT y [http://kvm.qumranet.com/kvmwiki/Windows_ACPI_Workaround desactivar ACPI]
*VirtualBox: tiene versión libre y con frontend gráfico, pero es preferible la versión cerrada
*Parallels: solución propietaria para Mac, que incluye el menú de inicio integrado

 # apt-get install vmplayer qemu

*http://www.ffnn.nl/pages/articles/linux/vmware-player-image-creation.php
*http://www.wikihow.com/Create-an-ISO-File-in-Linux
*http://gentoovm.blogspot.com/2006/03/gentoo-virtual-machine-i.html

El acceso al CD-ROM se realiza a través de ISOs. Crear una imagen de un CD es un simple comando en UNIX. Puede hacerse a partir de un CD o a partir de una carpeta/archivo existente:
 $ dd if=/dev/cdrom of=/datos/kk.iso
 $ mkisofs -o kk.iso /home/dani/Desktop/padeca23.exe

El sistema emulado reside bien en un fichero, imagen directa del disco duro a emular, o bien en una partición aparte. La versión libre de vmplayer no tiene utilidades para crear imágenes, por lo tanto nos valemos de las utilidades de qemu. Estas utilidades permiten convertir imágenes de un formato a otro.

 qemu-img create -f vmdk /datos/win2003.vmdk 4G
El fichero .vmx contiene las capacidades del sistema emulado.

Con qemu:
 $ qemu-img create win2003.img 4G
 $ qemu -hda /datos/win2003.img -cdrom /datos/kk.iso -m 256 -boot d
 $ qemu -hda /datos/win2003.img -cdrom /dev/cdrom -m 256 -boot c
Qemu ofrece la posibilidad de emular SO headless, con -nographic , y ofrecer un VNC para acceder a él. Puede usarse en combinación con  kqemu, un módulo de kernel que acelera la virtualización (aunque todavía no emplea características de los procesadores).
 # apt-get install kqemu-source
 # cd /usr/src
 # bzip2 -d kqemu.tar.bz2
 # tar vxf kqemu.tar
 # cd modules/kqemu
 # ./configure
 # make
 # make install
 # modprobe kqemu

*https://help.ubuntu.com/community/WindowsXPUnderQemuHowTo
*https://help.ubuntu.com/community/KVM

== Red ==
Las soluciones de virtualización son capaces de proporcionar red al sistema Guest. En su forma inicial, VMPlayer hace bridge del sistema Guest con el Host. Qemu por su parte esconde el Guest y exige redirigir puertos en la línea de comando.

Desde mi punto de vista, lo idóneo es realizar la virtualización mediante una interfaz de red. De este modo aprovechamos las herramientas de red del Host. Podemos hacer bridge, pero es aconsejable NAT. Así, el sistema se convierte en router de la máquina virtual.

En vmware especificar en el .vmx :
 ethernet0.connectionType = "hostonly"
En qemu en la línea de comando:
 $ sudo qemu -hda /datos/OS\ VMs/winxp.img -m 512 -boot c -net nic -net tap
qemu debe ejecutarse como root puesto que debe crear el interfaz de red tap0

La interfaz de red de vmware se carga al iniciar el sistema, mediante los scripts de inicio /tc/init.d/vmware-player:
 vmnet1 172.16.59.1/24
La interfaz de red de qemu se crea al cargar la vm:
 tap0 172.20.0.1/24

Ajustamos nuestro firewall para dar salida a internet a estas interfaces (ejemplo con qemu):
 # iptables -A INPUT -i tap0 -j ACCEPT
 # iptables -t nat -A POSTROUTING -s 172.20.0.0/24 -j MASQUERADE
 # #ahora redirijo un puerto externo al Guest
 # iptables -A PREROUTING -t nat -p tcp --dport 443 -j DNAT --to-destination 172.20.0.11:3389

Esto tiene una aplicación directa en el TS. Podemos virtualizar un XP para ejecutar una aplicación exclusiva Win32 que no trabaje con wine, mientras que nuestro Linux hace de fileserver SMB, DHCP, NAT, RDBMS.

== Aumentar espacio del disco virtual ==
 $ qemu-img info OS\ VMs/winxp.img
 image: OS VMs/winxp.img
 file format: raw
 virtual size: 5.0G (5368709120 bytes)
 disk size: 3.7G
Entonces...
 $ dd bs=1 if=/dev/zero of=OS\ VMs/winxp.img seek=6G count=0
Luego dentro de la máquina virtual mediante las utilidades del sistema, o partition magic:
 e2fsck -f /dev/hda3
 resize2fs /dev/hda3

== Tip Win2003 ==
Puede haber problemas instalando: se queda colgado instalando dispositivos. Hacer
 echo 1024 > /proc/sys/dev/rtc/max-user-freq
Y lanzar qemu desde una shell root.

== Ejecución coherente de aplicaciones ==
Gracias a una extensión de rdesktop (sólo disponible en la versión 1.5.0) podemos ejecutar aplicaciones de un servidor Terminal Server integradas en nuestro equipo. Su efecto es parecido al que se obtiene con RDP 6 (en Win2003 SP1 y Vista) o Parallels Coherence para MacOS X.
*http://www.cendio.com/seamlessrdp/
 qemu -hda /datos/winxp.img -smb vmware -redir tcp:3389::3389 -m 512 -boot c -nographic
 rdesktop -A -s "c:\seamlessrdp\seamlessrdpshell.exe notepad" -uadministrador -p- 172.16.59.128 # localhost si es qemu
 rdesktop -A -s "c:\seamlessrdp\seamlessrdpshell.exe c:\archivos de programa\autocad 2005\acad.exe" -uinvitado -pi 172.16.59.128
La opción -s lanza una aplicación al abrir sesión. Si no se especifica ninguna, abre un explorer.exe . Este modificador entra en conflicto con la pestaña Entorno de las propiedades del usuario. Lo que hace es lanzar un programa shell que intercepta el dibujado de ventanas para que rdesktop lo interprete con -A de modo que aparezcan en el window manager local. El resultado es un clásico de X11, ejecución remota de aplicaciones gráficas.

Estos ''aplicativos'' aparecen tal cual en el cliente, con las decoraciones de ventana del servidor. Instalar un tema para que las aplicaciones se parezcan en la medida de lo posible.
*https://help.ubuntu.com/community/SeamlessVirtualization

== Acerca de Terminal Services ==
El TS crea una conexión por cada aplicación lanzada, así que en el ''Configuración de servicios de TS'' hay que levantar la restricción de una sesión por usuario. El TS debe estar instalado: la casilla que aparece en Mi PC sólo permite dos conexiones de carácter administrativo, su fin no es ejecutar aplicaciones intensivamente. Podemos ver las sesiones y las aplicaciones abiertas en cada sesión con el ''Administrador de servicios de TS'' .

Se distinguen 2 tipos de licencias:
*''por Usuario'': cada usuario tiene asignada una licencia, desde cualquier host que se conecte. Actualmente Windows 2003 no controla las CAL de usuario. Quiere decir que conectar más usuarios de los que poseen una licencia sólo incumple el CLUF, pero no hay ninguna limitación software al respecto.
*''por Dispositivo'': un host tiene acceso al servidor, y todos los usuarios que se conecten desde ese host estarán autorizados. Con las licencias por dispositivo, si no hay CAL disponibles, se otorgan licencias temporales de 120 días. La activación se realiza en el panel de agregar y quitar componentes de windows. Posteriormente, en ''Licencias de TS'' se comprueba el estado del servidor, las licencias usadas, su caducidad... y se introducen las claves (licencias), bien directamente, por web ó teléfono. Estas licencias son las que se compraron con el servidor al principio y las que se establecieron en la instalación (5 Client Access License).
No hay ningún problema si las licencias temporales caducan: en un cliente Windows se borra una clave del registro y en un UNIX se cambia el nombre del host en la linea de comandos de rdesktop, mediante el modificador -n .

*http://support.microsoft.com/kb/822134/es

Las CAL por dispositivo se asignan en el momento de producirse la segunda conexión del host cliente.
Entonces, si hemos adquirido 5 CAL (mínimo básico) y no queremos usarlas recibiremos licencias temporales, que podemos regenerar cada 120 días perfectamente. El otro modo es trabajar con licencias por usuario, sobrepasando nosotros el número de CAL.
Cualquiera de los dos métodos no es muy legal, sin embargo, el primer método puede lograrse cambiando el nombre de host, o borrando una clave del registro. El segundo método, aunque menos controlado (no nos exige hacer nada en los clientes para poder volverlos a conectar), es una flagrante violación del Contrato de Licencia de Usuario Final.

Una vez activo, ver en Otorgamiento de licencias. Aqui aparece lo que elegimos al instalar (p. ej. 9999 Por Usuario). El problema es que este número no se valida (Servicio de Registro de Licencias).

En principio, con XP sólo es posible una conexión simultánea. Probar este parche http://sala.pri.ee/terminal-server-patch/ . Existe un producto comercial con este fin, [http://www.thinsoftinc.com/download_selection.aspx WinConnect Server XP] para XP y 2003SBS (posiblemente viole el CLUF) ; y un producto menos comercial, [http://digit.hdtv.pl/inne/ TerminalserverNoRestrPatch-1-1.zip] . Tambien hay una solución [http://riccardo.raneri.it/blog/eng/index.php/2006/04/24/windows-xp-multiuser-remote-desktop/ casera].

=== Consumo de memoria ===
Lanzando el bloc de notas por TS, como aplicación al iniciar sesión:
 ctfmon     2.3 MB
 rdpclip    2.2 MB
 notepad    2.5 MB
            7   MB

Iniciando sesión TS y luego abriendo la aplicación:
 ctfmon     2.3 MB
 rdpclip    2.2 MB
 notepad    2.5 MB
 explorer   9   MB
           16   MB

Con seamlessrdp:
 ctfmon     2.3 MB
 rdpclip    2.2 MB
 notepad    2.5 MB
 srdpshell  1.5 MB
            8.5 MB

Sustituyendo el bloc de notas por el eurowin el consumo con 18 usuarios es de 2600MB y con 30 3000MB.